on:
  push:
    tags:
      - '*'

jobs:

  build:

    name: ${{ matrix.runner_os[0] }}

    strategy:
      matrix:
        lisp: [sbcl]
        runner_os: [
          [ubuntu-24.04, ubuntu],
          [ubuntu-24.04-arm, ubuntu],
          [macos-latest, macos],
          [macos-13, macos]
        ]
    runs-on: ${{ matrix.runner_os[0] }}

    defaults:
      run:
        shell: bash

    steps:

    - uses: actions/checkout@v2

    - name: Update $PATH
      run: |
        echo $PATH
        echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV

    - name: Check $PATH
      run: echo $PATH

    - name: Add $CORE and $REPL_CORE
      run: |
        echo "CORE=moonli-${{ github.ref_name }}.${{ matrix.runner_os[1] }}.$(uname -m)" >> $GITHUB_ENV
        echo "REPL_CORE=moonli-${{ github.ref_name }}.cl-repl.${{ matrix.runner_os[1] }}.$(uname -m)" >> $GITHUB_ENV

    - name: Download implementation
      env:
        LISP: ${{ matrix.lisp }}
        OS: ${{ matrix.runner_os[1] }}
      run: |
        pwd
        ls -l
        bash <(curl -s https://raw.githubusercontent.com/digikar99/lisp-travis-lite/master/run.sh)

    - name: Download download-dependencies
      run: |
        git clone https://github.com/digikar99/download-dependencies $HOME/quicklisp/local-projects/download-dependencies

    - name: Download dependencies
      run: |
        cl --eval '(ql:quickload "download-dependencies")' \
           --eval '(in-package :download-dependencies)' \
           --eval '(push #P"./" ql:*local-project-directories*)' \
           --eval '(let ((*dependencies-home* (second ql:*local-project-directories*))) (ensure-system "moonli-repl"))'
        ls $HOME/quicklisp/local-projects/

    - name: Install readline (macos)
      if: startsWith(matrix.runner_os[1], 'macos')
      run: brew link readline --force

    - name: Prepare moonli
      run: |
        cl --eval '(push "./" ql:*local-project-directories*)' --eval '(ql:quickload "moonli")' --eval "(asdf:make :moonli)"
        mv moonli ${{ env.CORE }}.bin


    - name: Upload moonli
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.CORE }}.bin
        path: ${{ env.CORE }}.bin


    - name: Publish moonli
      uses: SierraSoftworks/gh-releases@v1.0.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        overwrite: 'true'
        files: ${{ env.CORE }}.bin


    - name: Prepare moonli-cl-repl
      run: |
        cl --eval '(push "./" ql:*local-project-directories*)' --eval '(ql:quickload "moonli-repl")' --eval "(asdf:make :moonli-repl)"
        mv moonli.repl ${{ env.REPL_CORE }}.bin


    - name: Upload moonli-cl-repl
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPL_CORE }}.bin
        path: ${{ env.REPL_CORE }}.bin


    - name: Publish moonli-cl-repl
      uses: SierraSoftworks/gh-releases@v1.0.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        overwrite: 'true'
        files: ${{ env.REPL_CORE }}.bin
